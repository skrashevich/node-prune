name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build
        run: CGO_ENABLED=0 go build -ldflags "-s -w" -trimpath -o node-prune

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: node-prune
          path: node-prune

  release:
    needs: build
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/tags/*'
      && contains(github.event.release.tag_name, 'v')
      && github.event.action == 'published'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: node-prune
          path: .
      - name: Set version number
        run: |
          echo "VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./node-prune
          asset_name: node-prune
          asset_content_type: application/octet-stream
